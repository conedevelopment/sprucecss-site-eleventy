@use 'sass:color';
@use 'sprucecss/scss/spruce' as *;

.notification {
  $this: &;
  border-radius: config('border-radius-sm', $display);
  display: block;
  font-size: 1rem;
  padding: spacer('s') calc(spacer('s') + 0.5rem);
  position: relative;

  code,
  kbd,
  samp {
    border: 1px solid;
  }

  &--info {
    background-color: color.change(color('info', 'alert', true), $alpha: 0.1);
    border-block-start: 0.5rem solid color('info', 'alert');

    #{$this}__icon {
      color: color('info', 'alert');
    }

    code,
    kbd,
    samp {
      border-color: color.change(color('info', 'alert', true), $alpha: 0.5);
    }
  }

  &--good {
    background-color: color.change(color('success', 'alert', true), $alpha: 0.1);
    border-block-start: 0.5rem solid color('success', 'alert');

    #{$this}__icon {
      color: color('success', 'alert');
    }

    code,
    kbd,
    samp {
      border-color: color.change(color('success', 'alert', true), $alpha: 0.5);
    }
  }

  &--bad {
    background-color: color.change(color('danger', 'alert', true), $alpha: 0.1);
    border-block-start: 0.5rem solid color('danger', 'alert');

    #{$this}__icon {
      color: color('danger', 'alert');
    }

    code,
    kbd,
    samp {
      border-color: color.change(color('danger', 'alert', true), $alpha: 0.5);
    }
  }

  &__content {
    @include layout-stack('xxs');
  }

  &__icon {
    background-color: color('background');
    block-size: 2rem;
    border: 4px solid color('background');
    border-radius: 1rem;
    inline-size: 2rem;
    inset: calc(-1rem - 4px) -1rem auto auto;
    position: absolute;
  }
}
